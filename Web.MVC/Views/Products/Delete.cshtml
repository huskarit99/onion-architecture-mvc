@model Domain.Entities.Product

@{
    ViewData["Title"] = "Delete";
}

@section Scripts {
    <script type="text/javascript">
        const ModalDeleteProduct = async () => {
            const productId = @Model.Id;
            await Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, delete it!'
            }).then(async (result) => {
                if (result.isConfirmed) {
                    await fetch(window.location.origin + "/products/delete?id=" + productId,
                        {
                            method: 'POST',
                            headers: {
                                'Accept': 'application/json',
                                'Content-Type': 'application/json'
                            },
                        })
                        .then(data => {
                            Swal.fire(
                                'Deleted!',
                                'Your file has been deleted.',
                                'success'
                            )
                        })
                        .catch((error) => {
                            console.log(error);
                            Swal.fire(
                                'Not Yet Deleted!',
                                'Some thing went wrong.',
                                'error'
                            )
                        });

                }
            })
        }
    </script>
}

<h1>Delete</h1>

<p>@ViewData["CurrentURL"]</p>

<h3>Are you sure you want to delete this?</h3>
<div>
    <h4>Product</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Phone)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Phone)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Email)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Email)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Text)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Text)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Currency)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Currency)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Category)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Category.Id)
        </dd>
    </dl>

    <form>
        <input type="hidden" asp-for="Id" />
        <input type="button" value="Delete" class="btn btn-danger" onclick="return ModalDeleteProduct()" />
        <a asp-action="Index">Back to List</a>
    </form>

   
</div>
